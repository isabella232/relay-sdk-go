// Code generated by vfsgen; DO NOT EDIT.

package asset

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"net/http"
	"os"
	pathpkg "path"
	"time"
)

// assets statically implements the virtual filesystem provided to vfsgen.
var assets = func() http.FileSystem {
	fs := vfsgen۰FS{
		"/": &vfsgen۰DirInfo{
			name:    "/",
			modTime: time.Time{},
		},
		"/schemas": &vfsgen۰DirInfo{
			name:    "schemas",
			modTime: time.Time{},
		},
		"/schemas/v1": &vfsgen۰DirInfo{
			name:    "v1",
			modTime: time.Time{},
		},
		"/schemas/v1/StepContainer-common.json": &vfsgen۰CompressedFileInfo{
			name:             "StepContainer-common.json",
			modTime:          time.Time{},
			uncompressedSize: 1718,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x54\x4f\x8f\xda\x3e\x10\xbd\xf3\x29\x2c\x2f\xa7\x9f\x08\x81\xd3\x4f\x70\xab\xba\xaa\xb4\xa7\xad\x8a\xd4\x43\xa3\x6c\xe5\x8d\x27\xe0\x6d\xfc\xa7\xf6\x80\x44\x57\xf9\xee\x95\xed\x24\x24\x40\x28\xea\xa5\x27\xd0\x78\xe6\xbd\x37\x33\x6f\xf2\x3e\x21\x84\x4e\x5d\xb1\x03\xc9\xe8\x9a\xd0\x1d\xa2\x59\xa7\xe9\x9b\xd3\x2a\x89\xd1\xb9\xb6\xdb\x94\x5b\x56\x62\xb2\xf8\x3f\x8d\xb1\x07\x3a\x0b\x75\x82\xf7\x6a\x14\xbc\xee\x2b\x36\x37\x7b\x63\x00\xe7\x85\x96\x4d\xb2\x4b\x0b\xad\x90\x09\x05\x36\x3d\x2c\xd3\x0d\x82\xf9\xd8\x06\x92\x42\x4b\xa9\xd5\xdc\xf3\x45\x4c\x0e\xae\xb0\xc2\xa0\xd0\xca\x63\x6f\x76\xcc\x02\x27\xc6\x6a\x03\x16\x05\x38\xa2\x4b\xc2\x88\x43\x30\xa4\x83\x25\x4c\xf1\xf3\x10\x82\x34\x15\x43\x88\xa8\x78\x34\xe0\xe1\xf4\xeb\x1b\x14\x18\x63\x27\x4c\xba\x26\x7e\x0e\x84\x50\xa1\x76\x60\x05\xfa\x00\x9d\x5a\x28\x7d\xcd\x43\xca\xa1\x14\x4a\x78\x49\x2e\xfd\x24\x2a\xf8\x02\x25\xad\x67\xb1\xc2\xf1\x1f\x5f\xc1\xba\x28\x37\xa2\xf4\xf8\x1c\x5a\xa1\xb6\x74\xd6\xc6\x0d\x43\x04\x1b\x3a\x7b\x39\x64\xcb\x64\x95\x67\x8b\x64\x95\xff\x37\xa5\x21\xa3\x05\x15\x92\x6d\x7b\xb2\xae\x37\xd0\x07\xfc\x7c\xd9\x4b\x78\x7e\xc9\x3e\x24\xdf\x58\xf2\x2b\x6f\x7e\x17\xc9\xea\x7b\xe2\xe9\xc6\x1b\x7c\xf2\xdc\xb4\x6e\x30\xea\x8e\x89\x71\x1e\x32\x58\x35\x20\x2b\x59\xe5\x60\x20\xde\x01\xa2\x50\xdb\x7f\x24\x7f\x13\xd9\xff\xaa\x81\x49\x93\x4e\x7b\x80\x27\x6f\xb4\x9b\xef\xb5\xc5\xd4\xf1\xd9\x07\xb2\x4e\xf2\xfb\xf9\xea\x3b\x7e\xd2\x6b\x6c\x7c\x22\xe1\xcd\xc2\xcf\xbd\xb0\xe0\x8f\x2b\xa3\xa5\xd5\x92\xce\x08\x55\x4c\x02\xcd\x07\x79\x57\x1c\xdc\xbd\x85\xb2\xf5\x4d\x3d\x21\x2f\xc0\x5e\xcb\xeb\xa5\x9d\xfe\xb7\xff\xf2\xc1\xc6\xa3\x65\xee\x58\xf7\xa0\xb1\xee\x42\xf3\x93\x1d\x46\x7c\xd0\xa5\xde\x7d\x97\xa1\x8c\x83\x01\xc5\xdd\xb3\x3a\x1b\x4f\xa7\x8f\x59\xcb\x8e\xc3\xd9\x4b\xa1\x9e\x10\xa4\x17\xb0\x1c\x3c\x88\x26\x7a\xf3\x6e\x1e\x3b\xc6\xcb\x99\xd5\x97\x33\x7b\xbc\x22\xf0\xae\x6f\xc7\xd8\x5d\x0c\x28\xda\x53\xb8\x6d\xd8\x7b\x4d\x79\xcb\x6c\xc3\x8f\xf6\x1f\x3d\x77\x60\xd5\x3e\xec\x72\xc4\x64\xbd\x93\x39\x33\x9c\xbf\xd0\x49\x3d\xf9\x1d\x00\x00\xff\xff\x64\xec\x3c\x37\xb6\x06\x00\x00"),
		},
		"/schemas/v1/StepContainer.json": &vfsgen۰CompressedFileInfo{
			name:             "StepContainer.json",
			modTime:          time.Time{},
			uncompressedSize: 828,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x92\xcd\x4e\xc3\x30\x10\x84\xef\x79\x8a\xd5\xb6\x27\x54\xc7\xe5\x84\xc8\xad\xe2\x01\x38\x20\x71\xa0\x0a\xc8\x4d\xb6\xad\x4b\x62\x1b\x7b\x83\x04\x55\xdf\x1d\xe5\xa7\x91\x8b\x8a\xf8\xbb\xd8\xca\x68\xe7\x9b\xd9\x24\xfb\x04\x00\xa7\xa1\xd8\x52\xad\x30\x03\xdc\x32\xbb\x4c\xca\x5d\xb0\x46\xf4\x6a\x6a\xfd\x46\x96\x5e\xad\x59\xcc\xaf\x64\xaf\x4d\x70\xd6\xf9\x74\x19\x79\x0c\xad\x9a\x4a\xa5\xae\x71\x8e\x38\x2d\x6c\x3d\x0c\x07\x59\x58\xc3\x4a\x1b\xf2\xf2\xf5\x52\xde\x31\xb9\x9b\xa3\x90\xb6\x41\x3d\xac\xa4\x50\x78\xed\x58\x5b\xd3\x42\x17\x10\x98\x1c\x8c\xd6\x7e\x48\x55\xd5\xed\x1a\x33\x58\x26\x00\x00\x7b\x9c\x7a\x5a\xff\xb3\x82\x28\x6c\x5d\x5b\xd3\x35\x99\xe0\x61\xd6\x93\xbb\x13\x00\xf9\xcd\x51\x1b\x60\x57\x3b\x2a\x18\x67\x47\xdd\xd3\x4b\xa3\x3d\x95\x63\x97\x4e\x55\x4e\xdf\x93\x0f\x7a\xd8\x69\x50\x9f\xb5\x29\x71\x78\xcc\x47\x82\xf3\xd6\x91\x67\x4d\x01\xb3\x31\xef\x94\x11\xeb\x51\x97\xc0\x5e\x9b\x4d\x94\x00\x80\x64\x9a\xba\xed\x82\xf1\xa2\x98\x8f\x23\x87\xcf\x7d\xfe\xc2\x3e\x79\x6f\x5f\xc0\x8d\xaa\xe9\x37\x70\xa7\x98\xc9\x77\x9f\xfc\x71\xb9\x10\x0f\x4a\xbc\xe7\xc3\x3d\x17\xd7\x4f\x22\xbf\x98\xe2\xd9\x20\xd6\x5c\x7d\x97\x74\xd6\x78\xfa\xa3\xfd\xcc\x9e\xc4\x77\x7b\xe6\xc9\x21\xf9\x08\x00\x00\xff\xff\x8a\x23\x1a\xb6\x3c\x03\x00\x00"),
		},
		"/schemas/v1/StepContainerTemplate.json": &vfsgen۰CompressedFileInfo{
			name:             "StepContainerTemplate.json",
			modTime:          time.Time{},
			uncompressedSize: 628,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x91\xbf\x4e\xc3\x30\x10\xc6\xf7\x3c\xc5\xe9\xda\xb1\x8d\x61\x42\xca\x86\x78\x00\x06\x10\x0b\xca\xe0\x3a\x97\xd6\x25\xb6\x0f\xfb\x82\x84\xaa\xbc\x3b\xca\x9f\x46\x06\x31\xc1\xe2\x28\x3f\xdd\xfd\xbe\xcf\xf2\xa5\x00\xc0\x6d\x32\x27\x72\x1a\x2b\xc0\x93\x08\x57\x4a\x9d\x53\xf0\xfb\x99\x96\x21\x1e\x55\x13\x75\x2b\xfb\x9b\x3b\x35\xb3\x0d\xee\xa6\x3d\xdb\x64\x3b\x9e\x0e\x7d\xa7\x4b\xee\x99\x49\x4a\x13\xdc\x32\x9c\x94\x09\x5e\xb4\xf5\x14\xd5\xc7\xad\x7a\x12\xe2\x87\x2b\x78\x26\xc7\x9d\x16\x2a\xc7\xc0\x59\xda\x50\x32\xd1\xb2\xd8\xe0\x47\xf9\x3d\x24\x21\x86\x55\x01\xb2\xac\xcc\xd3\xba\xeb\x1e\x5b\xac\xe0\xb5\x00\x00\xb8\xe0\x36\x52\xfb\xcf\x4e\x7b\x13\x9c\x0b\x7e\xaa\xb4\xc1\x61\x37\x9b\xa7\x13\x00\xe5\x93\x69\x0c\x08\x87\x33\x19\xc1\xdd\x95\x47\x7a\xef\x6d\xa4\x66\xed\x32\x51\xcd\xf6\x85\x62\xb2\xcb\xe5\x16\xfa\x66\x7d\x83\xcb\x6f\xbd\x1a\x38\x06\xa6\x28\x96\x12\x56\x6b\xde\x77\x47\xce\xb3\x2e\x49\xa2\xf5\xc7\x2c\x01\x00\xc9\xf7\x6e\xec\x82\xf9\x45\xb1\x5e\x47\x86\x9f\x7d\xfe\xe2\xfe\xf5\x2d\xf3\x90\x22\xff\x8e\x67\x5d\x0c\xc5\x57\x00\x00\x00\xff\xff\x60\x06\x6b\x6c\x74\x02\x00\x00"),
		},
		"/scripts": &vfsgen۰DirInfo{
			name:    "scripts",
			modTime: time.Time{},
		},
		"/scripts/build.tpl": &vfsgen۰CompressedFileInfo{
			name:             "build.tpl",
			modTime:          time.Time{},
			uncompressedSize: 785,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x52\x5f\x6f\xd3\x4e\x10\x7c\xdf\x4f\x31\xbf\xb3\xfb\x4f\x95\x53\xf5\xf7\xe8\xa8\x40\xa8\x43\x14\x15\x12\x94\xb8\xbc\x10\x84\xce\xf6\xda\x3e\xe1\xdc\x45\xbe\x0b\x50\x2c\x7f\x77\x64\x3b\x34\x51\xe1\x6d\x6f\x76\x66\x76\x3c\xb2\xf7\xdf\xcd\xde\xd6\x37\x89\xd2\x37\xac\xbf\x23\x91\xb6\x24\xf2\x10\x97\xca\x22\x57\x15\x43\x59\xc8\xbd\x33\x5b\xe9\x54\x2a\xab\xea\x09\x05\x6b\xae\xa5\xe3\x0c\xc9\x13\x5c\xc9\x58\x70\xb2\xaf\x24\xd6\xd1\xc3\x08\xd1\x12\x8b\x65\x8c\x69\x34\x8f\x47\x44\x96\x1d\x02\xde\x1b\xec\xd4\x8e\x73\xa9\x2a\x22\x8f\x3c\xdc\x9b\xed\x56\xea\xcc\x92\x47\x14\x2d\xef\x1f\xa6\xab\x3b\xe1\x37\xc3\x14\x06\x99\x49\xbf\x71\xdd\x8a\x81\xfb\x49\xd6\x4a\x26\x15\x9f\x90\xbf\x4e\x56\xb3\xf5\x51\xd1\x3f\xc3\xa0\x15\x7f\xd6\x6f\x1f\xe7\xef\xa3\x97\xa4\x23\xd8\x53\x3b\xef\xce\x31\xe3\xb4\x92\x35\x23\x90\x88\x27\xb3\x35\xd1\x8f\xb2\xfb\xe8\x82\x9d\xd9\x39\x8b\x8b\xd0\x85\x17\x58\x7e\x8c\x17\x93\x0f\xd3\x31\x32\x43\x40\x2a\x2d\x43\xf8\xcd\x01\x6d\x05\x94\x26\xc0\x5d\x11\x80\xde\xe5\xfa\xee\xf2\x40\x98\xac\x66\xad\xc0\xb0\x19\x8f\x09\xd8\xbc\x1e\x1e\x9c\x96\x06\xe2\x51\xd7\x9c\x9a\x42\xab\x5f\x9c\xc1\xec\x9c\x32\x3a\x44\x70\xa2\x7c\x75\xfe\xff\x40\xff\xa9\x1c\x6e\x8f\x36\x6c\x65\x4a\x99\xd1\x4c\x64\x4b\x95\x3b\xf8\x97\x97\x5d\xcc\xf9\x22\x42\x80\x5b\x5c\x5d\x11\x35\x0d\x6a\xa9\x0b\xc6\x68\xbe\x95\x05\x5b\xb4\x2d\xf9\x43\x1b\xf0\x4f\xaa\x43\xb2\x57\x55\xf6\x0c\x1d\x8b\x42\x10\x38\x59\xa0\x69\x30\x5a\x71\x8e\xb6\x45\x10\xf4\xbf\x44\x87\xbc\x53\x15\x6b\xb9\xe5\x0e\x1e\x51\xd3\x04\x60\x9d\x75\x27\x28\x37\x75\xd7\x02\x94\x86\xdf\x74\x75\x7c\x7e\xf3\xe5\x5a\x3c\x8f\xad\x68\xfb\x22\x3b\xc9\x5f\xf9\x80\x7f\x26\x7c\x11\x43\x74\xf3\x62\x38\x1e\xf6\xc6\xad\xc0\xf9\x39\x36\x7d\x41\xbb\x5a\x69\x97\x43\x78\x88\x65\x51\x70\x86\x33\x1b\x9e\xd9\x8d\x16\x38\x91\x41\x1c\x74\xa7\xd1\xfb\x42\x7f\x07\x00\x00\xff\xff\xc9\x6b\x30\xd1\x11\x03\x00\x00"),
		},
		"/templates": &vfsgen۰DirInfo{
			name:    "templates",
			modTime: time.Time{},
		},
		"/templates/bash.v1": &vfsgen۰DirInfo{
			name:    "bash.v1",
			modTime: time.Time{},
		},
		"/templates/bash.v1/Dockerfile.standalone.tpl": &vfsgen۰CompressedFileInfo{
			name:             "Dockerfile.standalone.tpl",
			modTime:          time.Time{},
			uncompressedSize: 704,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x92\x4f\x8f\xda\x30\x10\xc5\xef\xf9\x14\x4f\x11\xa0\xb6\x92\x6d\x09\x15\x0e\x54\x3d\x54\xaa\x50\xff\xd2\x2a\x88\x3d\xed\xc5\x24\x0e\x58\xc4\x8e\x65\x3b\x6c\xb4\x59\x7f\xf7\x15\xb0\x2b\xac\x64\xb9\xec\xd5\x33\xef\x37\xf3\xde\xb8\xeb\x08\x46\xff\x79\x7e\xe0\x3b\xb1\x94\x95\x58\x71\x25\xb0\xf8\x0a\x63\xa5\xf6\x25\x52\x2d\xc9\xd8\x91\x4a\xea\xa6\x25\x5c\x15\xf3\xcf\xd4\x73\x4b\xdb\xc7\x14\x74\xfd\xfd\xf7\x9d\xb0\x4e\xd6\x1a\x24\x84\x24\x26\xad\x7f\x7c\x9b\xce\xe6\x6f\xf1\xc6\x8e\xba\x3d\x9f\xce\xe6\xe9\x70\x6c\x9f\x92\x09\x53\x6f\xb2\x3f\xb1\x7c\xef\xbd\x71\x0b\xc6\xcc\xa5\xc3\x51\x2d\xb6\x4d\xc5\xa9\x69\x8c\x11\x9e\x6a\xe1\x99\x2b\x0e\x4c\x4b\x36\x76\xc3\x15\x97\xd9\xbf\xbf\xe8\x3a\xd0\x9f\xea\x2c\xde\x72\x27\x68\x26\x4a\x84\x90\x64\x9b\x15\x9c\xf0\x20\xa2\x69\xf1\x05\xf7\x09\x00\xa8\x43\x21\x2d\x88\x01\xf3\xca\x30\x2d\x31\x99\xbc\x54\xf2\x62\xf8\xf6\xb0\x13\xfe\x84\xbf\x7a\x3d\x6f\xd1\xb7\x33\xf0\x1d\xc2\xbb\x19\xbd\xa0\x63\x92\xc8\xf7\x35\xd2\xd1\x07\xe4\xfc\x4c\xbc\x2d\xf9\x88\xb8\x1e\x55\x52\x3c\xe1\x72\x2d\xd7\x28\x90\x1c\xe4\x8a\xf7\xdc\x82\xb4\xc7\x5f\xe5\x0d\xed\xb5\x53\x1d\xa1\x25\x39\xc5\x1e\x9d\x23\x84\x4f\xf1\xaf\x02\x6b\x9c\x65\x55\x9d\xf3\x8a\x6d\xa5\xee\x47\x1d\xcd\xb5\x0a\xa4\xb4\xaf\xe1\x27\xcf\x01\x00\x00\xff\xff\xf0\xde\xe3\x2c\xc0\x02\x00\x00"),
		},
		"/templates/bash.v1/Dockerfile.tpl": &vfsgen۰CompressedFileInfo{
			name:             "Dockerfile.tpl",
			modTime:          time.Time{},
			uncompressedSize: 1270,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x93\x51\x4f\xdc\x3a\x10\x85\xdf\xf7\x57\x1c\x45\x80\x00\xe1\x58\x42\x17\xa4\xcb\xd5\x7d\x40\x20\x54\x68\x81\xd5\x52\x2a\x55\x2d\x0f\x5e\x7b\x36\x71\x37\xb1\x5d\xdb\xa1\xdb\x86\xfc\xf7\x2a\xd9\x85\x4d\xb3\x45\x95\xfa\x16\x65\x66\xbe\x19\x9f\x39\x53\xd7\x0c\x7c\x1f\x97\x26\x44\x51\x14\xda\x64\x30\x1a\xda\x20\xe6\x14\x08\xd2\x9a\x28\xb4\x21\x1f\x10\x72\x5b\x15\x0a\x53\x42\xa4\xd2\x59\x2f\xfc\x77\xec\x3a\x32\xaa\xad\xf1\x14\x6c\x51\x45\x6d\x0d\xec\x0c\xe3\x1b\x76\xf4\xef\x5e\x8a\x7d\x0e\xd6\x34\xa3\x51\xdb\x63\x6b\x2c\xe4\x5c\x64\x74\xa1\x0b\xba\x11\x25\xe1\xe4\x7f\x38\xaf\x4d\x9c\x21\x31\x9a\x6d\x07\x56\x68\x53\x2d\x98\x28\xd5\xf1\x3f\x69\x14\x3e\x5d\xfc\x48\x90\xde\x9d\xbf\xfd\x40\x3e\xb4\xe0\x16\xd5\x27\xdd\xbd\x39\x3d\x3c\x3a\xfe\x1d\x6f\x3b\xa4\x21\x17\x87\x47\xc7\xc9\x66\xdb\x21\x65\x42\xce\xde\x4f\xde\xf5\xcb\xf3\x18\x5d\x38\xe1\xdc\x2d\x33\x42\x6a\x68\x5a\x15\x22\x75\x95\x73\x14\x53\x43\x91\x07\x35\xe7\x46\xf3\xed\xb0\x39\xe2\x92\xde\xf6\x1b\x8b\x98\xf7\xb9\x7c\xc9\xe1\x21\x92\x63\xdd\x8c\x09\xd2\x97\xa1\x2e\x26\xb7\xd7\xa8\x6b\xa4\x77\x14\xa3\x36\x59\x48\x2f\x4b\x91\x11\x9a\x66\x34\xb9\xbf\x41\xa0\x08\x46\xd5\x02\xff\xe1\xf3\x08\x00\xca\xb9\xd2\x1e\xcc\x81\xc7\xd2\x71\xa3\xb1\xb3\xb3\x8a\x48\xb5\xf9\xef\x5b\x46\xb1\xa5\xaf\x25\xea\x86\x1f\xaa\xb0\x21\x57\xd3\xfc\x35\x63\xb0\x9f\x3e\x89\x64\x6e\x91\x6c\xed\x42\x8a\x8e\xf8\x7a\xc9\x1e\xfa\xf1\x5e\x24\xc1\x13\x96\x4b\x0e\x55\x09\x26\xc1\xd6\xf8\x28\x3c\xd8\xe2\xf1\x6a\xf6\x4a\xed\x3a\xb3\x7c\x84\xd1\xac\x53\x7d\xbd\xc5\xa6\xd9\xef\x9b\x11\xbc\x0a\x9e\x17\x56\x8a\x82\x4f\xb5\x19\x4a\xdd\xeb\xeb\x4b\xb0\x99\x7f\x16\xbf\x5b\x9b\x70\x73\x30\x66\x2c\x93\x42\xe6\x04\xa1\x14\xa6\x22\xe4\x90\x82\x49\xf2\x51\xcf\xb4\x14\x91\x02\x64\xe5\x0b\x64\x3a\xe2\xcb\x57\x58\x47\x26\x84\xbc\xe5\x56\x4e\x89\x48\x6c\x90\xdd\x59\x4c\xcf\x7a\x56\x39\x55\x4a\xb7\xd7\x27\x8a\xd5\x6b\xc3\xb3\x6f\x36\x07\xa8\x6b\x78\x61\x32\xfa\x53\x79\x67\x46\x34\x4d\x5d\x83\x8c\xc2\xea\x6e\x7a\x9f\xaf\x53\xce\x6c\x59\x0a\xa3\x5e\x86\xf8\x94\x74\xca\xb5\x2f\x4f\x0e\x90\x30\x99\x1c\x2c\xe9\x4f\x28\xab\x10\xdf\xdb\xab\xd0\xe9\xfe\xd0\x6f\x71\x76\x3b\xfe\x88\x24\xe5\xbf\xdc\xc4\x8a\xdc\x9d\x56\x6b\x82\xa4\xdd\xf0\xcb\xb1\x35\x4d\x32\x3a\xbb\x3e\x1f\xf6\x1b\xe6\x3c\x8c\x7e\x06\x00\x00\xff\xff\x79\xb4\xac\xaf\xf6\x04\x00\x00"),
		},
		"/templates/bash.v1/container.yaml": &vfsgen۰CompressedFileInfo{
			name:             "container.yaml",
			modTime:          time.Time{},
			uncompressedSize: 553,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\xbd\x6a\xeb\x40\x10\x85\xfb\x7d\x8a\x03\xae\xed\x8b\xb9\x9d\x3a\x5f\xdf\x26\x24\x10\x43\x4c\x1a\xe3\x62\xa2\x9d\x58\x8b\x56\xa3\x45\x33\x32\x79\xfc\xb0\x6b\xf9\x27\x21\x26\x95\x60\xf8\xce\xa7\xb3\x87\x52\x78\xe5\x41\x43\x2f\x15\xea\x5e\x8c\x82\xf0\xf0\xe7\xb8\x74\x6d\x10\x5f\xe1\xc5\x38\xad\xcf\xe7\x2d\x77\x29\x92\xb1\x53\xdf\x5e\x42\xc7\xa5\x0b\x1d\x1d\x58\x2b\x07\xbc\x91\x72\xfe\x02\x36\xb1\x15\xfe\xf7\x75\xcb\xc3\x7b\x88\xbc\xb0\x14\x1d\x30\x83\x1a\x89\xa7\xd8\x4b\x81\x67\xf7\xf0\x2b\x76\x49\x02\x9e\x13\x8b\xd7\x67\x39\x47\xe7\xe5\xaf\x4e\xd9\x2c\xc8\xa1\xd4\x58\xf7\x5d\x47\xe2\x37\x64\xcd\xa9\x8d\x67\xad\x87\x90\xac\x34\xde\x36\x8c\x44\xd6\xc0\x7a\x58\xc3\xd0\x86\x63\xc4\x09\xc8\xb7\x61\x94\x12\x3a\x52\x1c\xb9\x82\x1a\xa7\x85\x36\x0e\x78\xc8\xef\xbc\x23\x5c\xc5\x14\x84\xf1\x14\x64\xfc\x98\xe7\x42\x1e\x65\x96\x2c\x1c\x95\x6f\x85\x54\xd0\xea\xaf\x03\x56\xde\x87\xec\xa0\xb8\xa1\xba\x3d\xaf\xf8\x4d\x7f\x85\xb0\xda\x3c\x22\x4d\x64\x36\x07\x51\xa3\x18\x6f\xed\xbb\xfd\x17\xef\x34\xc5\x2f\xde\x7f\xa4\x0d\xea\x09\xfd\x61\x83\xdd\xde\x7d\x06\x00\x00\xff\xff\xae\x08\x3a\x0b\x29\x02\x00\x00"),
		},
		"/templates/go.v1": &vfsgen۰DirInfo{
			name:    "go.v1",
			modTime: time.Time{},
		},
		"/templates/go.v1/Dockerfile.tpl": &vfsgen۰CompressedFileInfo{
			name:             "Dockerfile.tpl",
			modTime:          time.Time{},
			uncompressedSize: 618,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\x5f\x6b\xdb\x30\x14\xc5\xdf\xf5\x29\x0e\x62\xeb\x53\x65\xef\xb9\xd0\x87\x34\xc9\x4a\xb7\x35\x0e\xee\xd6\x31\x4a\x19\x37\x92\xec\x88\xda\x92\x91\xe4\x87\xa1\xe9\xbb\x0f\x3b\xa5\x24\x1d\xa5\x6f\xd2\xfd\x73\xce\xe1\xfe\x52\x12\xf8\x70\x65\x2c\xf9\x3f\xb8\xb8\xc4\xe0\x8d\x8d\x0d\x78\x39\x06\x5f\x76\x4e\x52\x57\xee\x8c\x2d\xad\xde\x8d\x1d\x89\x8f\x81\xa3\xd8\x50\xaf\x21\x72\x66\x9f\xeb\xea\x16\xad\xeb\xc8\xb6\x17\x29\xa1\xb8\xd3\x31\x1a\xdb\x86\xe2\xda\xdd\x6b\x1f\x8c\xb3\xc8\x59\x50\x37\x18\xab\xb1\xb8\xc3\x6e\x34\x9d\xd2\x9e\xad\x37\xf7\x58\x5e\x57\xbf\xd7\x9b\xc5\xd5\xb7\xf5\x0a\x9f\xd8\xcf\xaa\xfe\xba\xba\xa9\x51\xce\x23\x6c\x59\x6d\x7f\xa1\x40\xc1\xea\x1f\x1b\xb4\xee\xb0\x08\x41\x10\x0e\x3c\xa5\x97\xbc\x39\x73\xf0\xa2\x3c\xf1\x5e\xba\xbe\x27\xab\xb6\x14\xf7\x53\x9f\x1d\x52\x9e\x8c\xdc\xf4\xd4\x6a\xe4\x3c\xcb\xd3\xf0\x04\x21\xac\x13\x92\xe4\x5e\x83\x94\x82\x24\x21\xb5\x8f\xa6\x31\x92\xa2\x0e\x38\x3b\xc3\x38\x28\x8a\x5a\xbc\xea\xb0\xe9\x78\xa6\x39\x92\x5e\x28\x65\xa2\x71\x96\xba\x2d\xc9\x27\x6a\x75\x78\xdb\x27\x25\x78\xb2\xad\x7e\x6f\x7d\x0e\x8f\x9c\x53\x82\xb6\x6a\xd2\x9b\x6c\x8f\x9e\x6f\xab\x3c\x1f\xe3\x25\xc4\x03\x9f\x69\x86\x3d\x3f\x07\x17\x92\x9f\x1f\xb4\xff\xa2\x1f\x43\xfc\xee\xbe\x84\x19\xd9\xe3\xb1\xc1\xcc\x42\x88\xc6\xbb\xfe\xf2\x19\xe0\xff\x0c\x4e\xff\x6c\x79\xbb\xc2\xc3\xab\xe2\x23\xfb\x17\x00\x00\xff\xff\x95\xc6\x1f\x70\x6a\x02\x00\x00"),
		},
		"/templates/go.v1/container.yaml": &vfsgen۰CompressedFileInfo{
			name:             "container.yaml",
			modTime:          time.Time{},
			uncompressedSize: 593,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\x41\x6b\xe3\x30\x10\x85\xef\xfa\x15\x43\xce\x9b\x04\x93\x9b\x6f\xd9\x2c\x84\x65\xf7\x10\xd8\xb0\x97\x52\xc8\xd8\x9a\xd8\x83\x65\x49\x48\x63\xb7\xf9\xf7\x45\x8a\xdd\xa4\xa1\xa5\x27\x83\xe7\xbd\xef\x8d\xde\xa0\xe7\xff\x14\x22\x3b\x5b\x42\xed\xac\x20\x5b\x0a\xeb\xb1\x50\x1d\x5b\x5d\xc2\x3f\x21\xbf\x9b\x7f\x1f\xa9\xf7\x06\x85\x54\xd4\xdd\xbb\x69\x2c\x14\xf7\xd8\x50\x2c\x15\x40\x85\x91\xd2\x17\x40\x26\x6d\x09\xbf\x5c\xdd\x51\x38\xb3\xa1\x95\x78\xa3\x22\x89\xb0\x6d\xb2\x7c\xe7\xfa\x1e\xad\x3e\xa0\xb4\x57\x97\xa6\x58\x07\xf6\x92\xc9\xc7\x96\xc0\xa3\xb4\x20\x0e\xa4\x25\xa8\xaf\x6a\xa8\xd8\x62\xb8\xfc\x00\xc3\x1d\xc1\xa9\xee\xf5\xba\xbf\x2c\xa7\xe1\x49\x01\xec\xdd\xbc\xdc\xe7\xcc\xf1\x3a\x05\x77\xce\xd8\xbd\x03\x83\xb6\x19\xb0\xa1\x94\x54\x0d\x6c\x34\xbc\xb0\xb4\xd9\x3d\xa2\x19\xa8\x84\x45\xb1\x2a\x36\x0b\x05\xf0\x3b\xbd\xf5\x0b\xf0\xd6\x78\xb6\x04\x7f\xd9\x0e\xaf\xcb\x54\x85\x86\x5c\x4d\xc2\x0e\x91\xe0\xec\x02\x68\x8e\x12\xb8\x1a\x52\x07\x39\x3e\x0a\xf9\x5b\xf3\xf7\x99\x98\x71\xe5\x46\x01\x6c\xb5\xe6\x94\x83\xe6\x80\x75\x37\xb7\xfd\xb0\xc2\x4d\x04\xdb\xc3\x1f\xf0\x93\x32\xa5\xb3\x8d\x82\xc6\xdc\xd3\x9f\x9e\x3f\x70\xa7\x53\x7c\xc3\xfd\x89\xb1\x9d\xef\x90\xc1\x61\xb0\x0f\xd0\xb7\x00\x00\x00\xff\xff\xe4\xf7\x50\x29\x51\x02\x00\x00"),
		},
	}
	fs["/"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/schemas"].(os.FileInfo),
		fs["/scripts"].(os.FileInfo),
		fs["/templates"].(os.FileInfo),
	}
	fs["/schemas"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/schemas/v1"].(os.FileInfo),
	}
	fs["/schemas/v1"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/schemas/v1/StepContainer-common.json"].(os.FileInfo),
		fs["/schemas/v1/StepContainer.json"].(os.FileInfo),
		fs["/schemas/v1/StepContainerTemplate.json"].(os.FileInfo),
	}
	fs["/scripts"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/scripts/build.tpl"].(os.FileInfo),
	}
	fs["/templates"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/templates/bash.v1"].(os.FileInfo),
		fs["/templates/go.v1"].(os.FileInfo),
	}
	fs["/templates/bash.v1"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/templates/bash.v1/Dockerfile.standalone.tpl"].(os.FileInfo),
		fs["/templates/bash.v1/Dockerfile.tpl"].(os.FileInfo),
		fs["/templates/bash.v1/container.yaml"].(os.FileInfo),
	}
	fs["/templates/go.v1"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/templates/go.v1/Dockerfile.tpl"].(os.FileInfo),
		fs["/templates/go.v1/container.yaml"].(os.FileInfo),
	}

	return fs
}()

type vfsgen۰FS map[string]interface{}

func (fs vfsgen۰FS) Open(path string) (http.File, error) {
	path = pathpkg.Clean("/" + path)
	f, ok := fs[path]
	if !ok {
		return nil, &os.PathError{Op: "open", Path: path, Err: os.ErrNotExist}
	}

	switch f := f.(type) {
	case *vfsgen۰CompressedFileInfo:
		gr, err := gzip.NewReader(bytes.NewReader(f.compressedContent))
		if err != nil {
			// This should never happen because we generate the gzip bytes such that they are always valid.
			panic("unexpected error reading own gzip compressed bytes: " + err.Error())
		}
		return &vfsgen۰CompressedFile{
			vfsgen۰CompressedFileInfo: f,
			gr:                        gr,
		}, nil
	case *vfsgen۰DirInfo:
		return &vfsgen۰Dir{
			vfsgen۰DirInfo: f,
		}, nil
	default:
		// This should never happen because we generate only the above types.
		panic(fmt.Sprintf("unexpected type %T", f))
	}
}

// vfsgen۰CompressedFileInfo is a static definition of a gzip compressed file.
type vfsgen۰CompressedFileInfo struct {
	name              string
	modTime           time.Time
	compressedContent []byte
	uncompressedSize  int64
}

func (f *vfsgen۰CompressedFileInfo) Readdir(count int) ([]os.FileInfo, error) {
	return nil, fmt.Errorf("cannot Readdir from file %s", f.name)
}
func (f *vfsgen۰CompressedFileInfo) Stat() (os.FileInfo, error) { return f, nil }

func (f *vfsgen۰CompressedFileInfo) GzipBytes() []byte {
	return f.compressedContent
}

func (f *vfsgen۰CompressedFileInfo) Name() string       { return f.name }
func (f *vfsgen۰CompressedFileInfo) Size() int64        { return f.uncompressedSize }
func (f *vfsgen۰CompressedFileInfo) Mode() os.FileMode  { return 0444 }
func (f *vfsgen۰CompressedFileInfo) ModTime() time.Time { return f.modTime }
func (f *vfsgen۰CompressedFileInfo) IsDir() bool        { return false }
func (f *vfsgen۰CompressedFileInfo) Sys() interface{}   { return nil }

// vfsgen۰CompressedFile is an opened compressedFile instance.
type vfsgen۰CompressedFile struct {
	*vfsgen۰CompressedFileInfo
	gr      *gzip.Reader
	grPos   int64 // Actual gr uncompressed position.
	seekPos int64 // Seek uncompressed position.
}

func (f *vfsgen۰CompressedFile) Read(p []byte) (n int, err error) {
	if f.grPos > f.seekPos {
		// Rewind to beginning.
		err = f.gr.Reset(bytes.NewReader(f.compressedContent))
		if err != nil {
			return 0, err
		}
		f.grPos = 0
	}
	if f.grPos < f.seekPos {
		// Fast-forward.
		_, err = io.CopyN(ioutil.Discard, f.gr, f.seekPos-f.grPos)
		if err != nil {
			return 0, err
		}
		f.grPos = f.seekPos
	}
	n, err = f.gr.Read(p)
	f.grPos += int64(n)
	f.seekPos = f.grPos
	return n, err
}
func (f *vfsgen۰CompressedFile) Seek(offset int64, whence int) (int64, error) {
	switch whence {
	case io.SeekStart:
		f.seekPos = 0 + offset
	case io.SeekCurrent:
		f.seekPos += offset
	case io.SeekEnd:
		f.seekPos = f.uncompressedSize + offset
	default:
		panic(fmt.Errorf("invalid whence value: %v", whence))
	}
	return f.seekPos, nil
}
func (f *vfsgen۰CompressedFile) Close() error {
	return f.gr.Close()
}

// vfsgen۰DirInfo is a static definition of a directory.
type vfsgen۰DirInfo struct {
	name    string
	modTime time.Time
	entries []os.FileInfo
}

func (d *vfsgen۰DirInfo) Read([]byte) (int, error) {
	return 0, fmt.Errorf("cannot Read from directory %s", d.name)
}
func (d *vfsgen۰DirInfo) Close() error               { return nil }
func (d *vfsgen۰DirInfo) Stat() (os.FileInfo, error) { return d, nil }

func (d *vfsgen۰DirInfo) Name() string       { return d.name }
func (d *vfsgen۰DirInfo) Size() int64        { return 0 }
func (d *vfsgen۰DirInfo) Mode() os.FileMode  { return 0755 | os.ModeDir }
func (d *vfsgen۰DirInfo) ModTime() time.Time { return d.modTime }
func (d *vfsgen۰DirInfo) IsDir() bool        { return true }
func (d *vfsgen۰DirInfo) Sys() interface{}   { return nil }

// vfsgen۰Dir is an opened dir instance.
type vfsgen۰Dir struct {
	*vfsgen۰DirInfo
	pos int // Position within entries for Seek and Readdir.
}

func (d *vfsgen۰Dir) Seek(offset int64, whence int) (int64, error) {
	if offset == 0 && whence == io.SeekStart {
		d.pos = 0
		return 0, nil
	}
	return 0, fmt.Errorf("unsupported Seek in directory %s", d.name)
}

func (d *vfsgen۰Dir) Readdir(count int) ([]os.FileInfo, error) {
	if d.pos >= len(d.entries) && count > 0 {
		return nil, io.EOF
	}
	if count <= 0 || count > len(d.entries)-d.pos {
		count = len(d.entries) - d.pos
	}
	e := d.entries[d.pos : d.pos+count]
	d.pos += count
	return e, nil
}
