#!/usr/bin/env bash
set -euo pipefail

#
# Commands
#

MKDIR_P="${MKDIR_P:-mkdir -p}"
GO="${GO:-go}"
TAR="${TAR:-tar}"
ZIP_M="${ZIP_M:-zip -m}"

#
# Variables
#

ARTIFACTS_DIR="${ARTIFACTS_DIR:-artifacts}"

GOOS="$( $GO env GOOS )"
GOARCH="$( $GO env GOARCH )"

#
#
#

. scripts/library.sh

[[ "$#" -eq 1 ]] || nebula::sdk::usage "$0 <program>"

nebula::sdk::release_check
eval "$( nebula::sdk::cli_vars "$1" )"

ARTIFACTS_CLI_DIR="${ARTIFACTS_DIR}/${CLI_NAME}"

BIN_DIR="${ARTIFACTS_CLI_DIR}" \
  GOFLAGS="${GOFLAGS:-} -a" \
  LDFLAGS="${LDFLAGS:-}"' -extldflags "-static"' \
  scripts/build "${CLI_NAME}"

case "$( $GO env GOOS )" in
windows)
  (
    set -x
    pushd "${ARTIFACTS_CLI_DIR}" >/dev/null
    $ZIP_M -q "${CLI_FILE_PREFIX}.zip" "${CLI_FILE_BIN}"
    nebula::sdk::sha256sum <"${CLI_FILE_PREFIX}.zip" >"${CLI_FILE_PREFIX}.zip.sha256"
  )
  ;;
*)
  (
    set -x
    pushd "${ARTIFACTS_CLI_DIR}" >/dev/null
    $TAR -cJ --remove-files -f "${CLI_FILE_PREFIX}.tar.xz" "${CLI_FILE_BIN}"
    nebula::sdk::sha256sum <"${CLI_FILE_PREFIX}.tar.xz" >"${CLI_FILE_PREFIX}.tar.xz.sha256"
  )
  ;;
esac

set +x
